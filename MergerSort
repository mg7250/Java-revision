class Solution
{
    void merge(int arr[], int l, int m, int r)
    {
         int[] a1=new int[m-l+1];
         int[] a2=new int[r-m];
         for(int i=0;i<a1.length;i++){
             a1[i]=arr[i+l];
         }
         for(int i=0;i<a2.length;i++){
             a2[i]=arr[i+m+1];
         }
         int tem1=0;
         int tem2=0;
         int k=l;
         while(tem1<a1.length && tem2<a2.length){
             if(a1[tem1]<a2[tem2]){
             arr[k]=a1[tem1];
                 tem1++;
             }
             else{
                 arr[k]=a2[tem2];
                 tem2++;
             }
             k++;
         }
         while(tem1<a1.length){
             arr[k]=a1[tem1];
             k++;
             tem1++;
         }
         while(tem2<a2.length){
             arr[k]=a2[tem2];
             k++;
             tem2++;
         }
         
    }
    void mergeSort(int arr[], int l, int r)
    {
        //code here
        if(l<r){
            int mid=(l+r)/2;
            mergeSort(arr,l,mid);
            mergeSort(arr,mid+1,r);
            merge(arr,l,mid,r);
        }
    }
}
